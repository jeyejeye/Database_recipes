{"version":3,"sources":["webpack:///./src/api/resources/recipe/recipe.controller.js","webpack:///./src/api/resources/recipe/recipe.model.js","webpack:///./src/api/resources/step/step.model.js","webpack:///./src/api/resources/user/user.model.js","webpack:///./src/db.js","webpack:///external \"sequelize\""],"names":["getAll","req","res","model","findAll","then","status","json","entities","catch","error","getByUser","userId","where","user_id","createOne","next","console","log","body","create","entity","getOne","resolve","docFromId","deleteOne","destroy","updateOne","update","merge","save","findByParam","id","findById","Error","Recipe","schema","title","Sequelize","STRING","photo_id","UUID","description","ingredients","connect","sequelize","define","underscored","freezeTableName","hasMany","Step","name","token","User","indexes","unique","fields","instance","config","appConfig","db","database","username","password","host","dialect","operatorsAliases","pool","max","min","idle","acquire","createdAt","updatedAt"],"mappings":"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","file":"0.a8890a3fef36df9d107b.hot-update.js","sourcesContent":["import Recipe from './recipe.model';\nimport {merge} from \"sequelize\";\n\nconst getAll = model => (req, res) => {\n    return model.findAll({})\n        .then(entities => res.status(200).json(entities))\n        .catch(error => res.status(500).json(error))\n};\n\nconst getByUser = model => (req, res, userId) => {\n    return model.findAll({\n        where: {\n            user_id: userId\n        }\n    })\n        .then(entities => res.status(200).json(entities))\n        .catch(error => res.status(500).json(error))\n};\n\nconst createOne = model => (req, res, next) => {\n    console.log('createOne', req.body);\n    return model.create(req.body)\n        .then(entity => res.status(201).json(entity))\n        .catch(error => next(error));\n};\n\nconst getOne = () => (req, res, next) => {\n    return Promise.resolve(req.docFromId)\n        .then(entity => res.status(200).json(entity))\n        .catch(error => next(error));\n};\n\nconst deleteOne = () => (req, res, next) => {\n    return req.docFromId.destroy()\n        .then(entity => res.status(201).json(entity))\n        .catch(error => next(error));\n};\n\nconst updateOne = () => (req, res, next) => {\n    const update = req.body;\n    merge(req.docFromId, update);\n    return req.docFromId.save()\n        .then(entity => res.status(201).json(entity))\n        .catch(error => next(error));\n};\n\nexport const findByParam = model => (req, res, next, id) => {\n    return model.findById(id)\n        .then(entity => {\n            if (!entity) {\n                next(new Error('Not Found Error'));\n            } else {\n                req.docFromId = entity;\n                next();\n            }\n        })\n        .catch(error => {\n            next(error);\n        });\n};\n\n\nexport default {\n    getAll: getAll(Recipe),\n    createOne: createOne(Recipe),\n    getOne: getOne(),\n    findByParam: findByParam(Recipe),\n    deleteOne: deleteOne(Recipe),\n    updateOne: updateOne(Recipe),\n    getByUser: getByUser(Recipe)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/resources/recipe/recipe.controller.js","import Sequelize from 'sequelize';\nimport { connect } from '../../../db';\nimport Step from '../step/step.model';\n\nconst schema = {\n    title: Sequelize.STRING,\n    photo_id: Sequelize.UUID,\n    description: Sequelize.STRING,\n    ingredients: Sequelize.STRING,\n//    steps: Sequelize.ARRAY(Sequelize.UUID),\n};\n\nconst Recipe = connect().sequelize.define('recipe', schema, {\n    underscored: true,\n    freezeTableName: true,\n});\n\nRecipe.hasMany(Step);\nexport default Recipe;\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/resources/recipe/recipe.model.js","import Sequelize from 'sequelize';\nimport { connect } from '../../../db';\n\n\nconst schema = {\n    title: Sequelize.STRING,\n    description: Sequelize.STRING,\n};\n\nconst Step = connect().sequelize.define('step', schema, {\n    underscored: true,\n    freezeTableName: true,\n});\n\n\nexport default Step;\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/resources/step/step.model.js","import Sequelize from 'sequelize';\nimport { connect } from '../../../db';\nimport Recipe from '../recipe/recipe.model';\n\nconst schema = {\n    name: Sequelize.STRING,\n    token: Sequelize.STRING\n};\n\nconst User = connect().sequelize.define('user', schema, {\n    indexes: [{\n        unique: true,\n        fields: ['token']\n    }],\n    underscored: true,\n    freezeTableName: true,\n});\nUser.hasMany(Recipe);\nexport default User;\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/resources/user/user.model.js","import appConfig from './config';\nimport Sequelize from 'sequelize';\n\nlet instance = null;\n\nexport const connect = (config = appConfig) => {\n    if (instance !== null) {\n        return instance;\n    }\n\n    const sequelize = new Sequelize(\n        config.db.database,\n        config.db.username,\n        config.db.password,\n        {\n            host: config.db.host,\n            dialect: config.db.dialect,\n            operatorsAliases: false,\n            pool: {\n                max: config.db.max,\n                min: config.db.pool.min,\n                idle: config.db.pool.idle,\n                acquire: config.db.pool.acquire\n            },\n            define: {\n                createdAt: 'createdat',\n                updatedAt: 'updatedat'\n            }\n        }\n    );\n\n    instance = {\n        Sequelize,\n        sequelize,\n    };\n\n    return instance;\n};\n\n\n// WEBPACK FOOTER //\n// ./src/db.js","module.exports = require(\"sequelize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sequelize\"\n// module id = sequelize\n// module chunks = 0"],"sourceRoot":""}